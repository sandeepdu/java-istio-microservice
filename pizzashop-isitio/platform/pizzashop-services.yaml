# Copyright Sandeep Mogla
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

##################################################################################################
# This file defines the services, service accounts, and deployments for the Bookinfo sample.
#
# To apply all 2 Pizza services, their corresponding service accounts, and deployments:
#
#   kubectl apply -f pizzashop-services.yaml
#
# Alternatively, you can deploy any resource separately:
#
#   kubectl apply -f pizzashop-services.yaml -l service=orderservice # reviews Service
#   kubectl apply -f pizzashop-services.yaml -l account=pizzashop-orderservice # reviews ServiceAccount
#   kubectl apply -f pizzashop-services.yaml -l app=orderservice,version=v1 # orderservice-v1 Deployment
##################################################################################################

##################################################################################################
# Assesment - Order services
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: orderservice
  labels:
    app: orderservice
    service: orderservice
spec:
  ports:
  - port: 5000
    name: http
  selector:
    app: orderservice
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pizzashop-orderservice
  labels:
    account: orderservice
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orderservice-v1
  labels:
    app: orderservice
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orderservice
      version: v1
  template:
    metadata:
      labels:
        app: orderservice
        version: v1
    spec:
      serviceAccountName: pizzashop-orderservice
      containers:
      - name: orderservice
        image: assessment/orderservice:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        securityContext:
          runAsUser: 1000
      volumes:
      - name: tmp
        emptyDir: {}
---
##################################################################################################
# Assesment - Pizza services
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: pizzaservice
  labels:
    app: pizzaservice
    service: pizzaservice
spec:
  ports:
  - port: 5000
    name: http
  selector:
    app: pizzaservice
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pizzashop-pizzaservice
  labels:
    account: pizzaservice
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pizzaservice-v1
  labels:
    app: pizzaservice
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pizzaservice
      version: v1
  template:
    metadata:
      labels:
        app: pizzaservice
        version: v1
    spec:
      serviceAccountName: pizzashop-pizzaservice
      containers:
      - name: pizzaservice
        image: assessment/pizzaservice:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        securityContext:
          runAsUser: 1000
      volumes:
      - name: tmp
        emptyDir: {}
---
